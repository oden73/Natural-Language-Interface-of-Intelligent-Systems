@startuml
'https://plantuml.com/class-diagram

class Word {
    + start_pos: int
    + stop_pos: int
    + word: str
    + lexeme: str
    + basis: str
    + part_of_speech: str
    + ending: str
    + case: str
    + gender: str
    + number: str
    + Word(start_pos: int, stop_pos: int, word: str, lexeme: str, basis: str, part_of_speech: str, ending: str, case: str, gender: str, number: str)
}

class ReplaceHelper {
    + part_of_speech_dict: dict
    + case_dict: dict
    + number_dict: dict
    + gender_dict: dict
}

class ReverseReplaceHelper {
    + case_dict: dict
    + gender_dict: dict
}

class GeneralController {
    - cur_word_list: list[Word]
    - window_integration_controller: WindowIntegrationController
    - file_controller: FileController
    - format_controller: FormatController
    - morphology_controller: MorphologyController
    - save_controller: SaveController
    - word_form_generation_controller: WordFormGenerationController
    - editing_controller: EditingController
    - search_controller: SearchController
    - documentation_controller: DocumentationController
    + GeneralController()
    + list[Word] word_list_generation(text_file_name: str)
    + save_file(save_file_path: str)
}

class FileController {
    + FileController()
    + str file_format_definition(file_name: str)
}

abstract class FormatController {
    + FormatController(file_name: str)
    # bool is_file_valid(file_name: str)
    # str clean_text(text: str)
    + str file_parse(file_name: str)
}

class DOCController {
    + DOCController()
    + str file_parse(file_name: str)
}

class DOCXController {
    + DOCXController()
    + str file_parse(file_name: str)
}

class MorphologyController {
    - helper: ReplaceHelper
    - segmenter: Segmenter
    - morph_vocab: MorphVocab
    - emb: NewsEmbedding
    - morph_tagger: NewsMorphTagger
    + MorphologyController()
    + list[Word] word_objects_creation(text: str)
}

class SaveController {
    + SaveController()
    - str form_json(save_path: str, list[Word])
    + void save_file(save_path: str, list[Word])
}

class WordFormGenerationController {
    - morph_analyzer: MorphAnalyzer
    - helper: ReverseReplaceHelper
    + WordFormGenerationController()
    + str word_form_generation(params: dict)
}

class EditingController {
    - helper: ReverseReplaceHelper
    - morph_analyzer: MorphAnalyzer
    + EditingController()
    + Word edit_word(word: Word, params: dict)
}

class SearchController {
    + SearchController()
    + list[Word] search(word_list: list[Word], params: dict)
    + list[Word] filter(word_list: list[Word], params: dict)
}

class DocumentationController {
    + DocumentationController(documentation_file_save_path: str)
    - str generate_documentation_text(word_list: list[Word])
    + void documentation(documentation_file_save_path: str, word_list: list[Word], full_document: bool)
}

class WindowIntegrationController {

}

class MainWindow {

}

class AboutProgramWindow {

}

class WordFormGenerationWindow {

}

class EditWordWindow {

}

class AddWordWindow {

}

class SearchWindow {

}

class SearchResultWindow {

}

class FilterWindow {

}

class FilterResultWindow {

}

GeneralController ---> Word
GeneralController ---* FileController
GeneralController ---* FormatController
GeneralController ---* MorphologyController
GeneralController ---* SaveController
GeneralController ---* WordFormGenerationController
GeneralController ---* EditingController
GeneralController ---* SearchController
GeneralController ---* DocumentationController

FormatController ---|> DOCController
FormatController ---|> DOCXController

MorphologyController ---> Word
MorphologyController ---* ReplaceHelper

SaveController ---> Word

WordFormGenerationController ---> Word
WordFormGenerationController ---* ReverseReplaceHelper

EditingController ---> Word
EditingController ---* ReverseReplaceHelper

SearchController ---> Word

DocumentationController ---> Word

@enduml